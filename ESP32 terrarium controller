#include <Adafruit_LiquidCrystal.h>
#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <WiFi.h>
#include <WiFiUdp.h>
#include <NTPClient.h>
#include <time.h>
#include <TimeLib.h>
#define LED_GPIO   5
#define PWM1_Ch    0
#define PWM1_Res   8
#define PWM1_Freq  1000

Adafruit_LiquidCrystal lcd(0x20);
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", -14400, 3600);
Adafruit_BME280 bme;

int PWM1_DutyCycle = 0;
int RelayPin = 4;
int ledState = LOW;
unsigned long previousMillis = 0;
long OnTime = 900000;
long OffTime = 5400000;
float temperature, humidity;
const char* ssid = "xxxxxxxxx";
const char* password = "xxxxxxxxx";
char Time[ ] = "TIME:00:00:00";
byte last_second, second_, minute_, hour_;

void setup() {
  ledcAttachPin(LED_GPIO, PWM1_Ch);
  ledcSetup(PWM1_Ch, PWM1_Freq, PWM1_Res);
  lcd.begin(20, 4);
  Serial.begin(115200);
  Serial.printf("Connecting to %s ", ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println(" CONNECTED");
  pinMode(2, OUTPUT);
  pinMode(RelayPin, OUTPUT);
  delay(1000);
  bme.begin(0x76);
  Serial.println("BME Initialized");
  timeClient.begin();
}

void loop() {
  lcd.setBacklight(HIGH);
  humidity = bme.readHumidity();
  temperature = bme.readTemperature();
  if (humidity >= 90) {
    digitalWrite(2, HIGH);
    Serial.println("Fan1 On");
    lcd.setCursor(0, 0);
    lcd.print ("Fan1 On");
  } else if (humidity <= 85) {
    digitalWrite(2, LOW);
    Serial.println("Fan1 Off");
    lcd.setCursor(0, 0);
    lcd.print ("Fan1 Off");
  }
  unsigned long currentMillis = millis();
  if ((ledState == HIGH) && (currentMillis - previousMillis >= OnTime)) {
    ledState = LOW;
    previousMillis = currentMillis;
    digitalWrite(RelayPin, ledState);
    Serial.println("Fan2 Off");
    lcd.setCursor(9, 0);
    lcd.print ("Fan2 Off");
  }
  else if ((ledState == LOW) && (currentMillis - previousMillis >= OffTime)) {
    ledState = HIGH;
    previousMillis = currentMillis;
    digitalWrite(RelayPin, ledState);
    Serial.println("Fan2 On");
    lcd.clear();
    lcd.setCursor(9, 0);
    lcd.print ("Fan2 On");
  }
  /* Serial.print("Humidity = ");
    Serial.print(humidity);
    Serial.println("%  ");*/
  lcd.setCursor(0, 1);
  lcd.print("RH=");
  lcd.print(humidity);
  lcd.print("%  ");

  /*Serial.print("Temp=");
    Serial.print(temperature);
    Serial.print("C  ");*/
  lcd.setCursor(10, 1);
  lcd.print("Tmp=");
  lcd.print(temperature);
  lcd.print("C  ");
  timeClient.update();
  unsigned long unix_epoch = timeClient.getEpochTime();
  second_ = second(unix_epoch);
  if (last_second != second_) {
    minute_ = minute(unix_epoch);
    hour_   = hour(unix_epoch);
    Time[12] = second_ % 10 + 48;
    Time[11] = second_ / 10 + 48;
    Time[9]  = minute_ % 10 + 48;
    Time[8]  = minute_ / 10 + 48;
    Time[6]  = hour_   % 10 + 48;
    Time[5]  = hour_   / 10 + 48;
    lcd.setCursor(0, 3);
    lcd.print(Time);
    last_second = second_;
  }
  if (hour_ && minute_ == (20, 9))
    while (PWM1_DutyCycle < 255){
      ledcWrite(PWM1_Ch, PWM1_DutyCycle++);
   delay (100); 
  }
 else if (hour_ && minute_ == (20, 15))
    while (PWM1_DutyCycle > 0){
      ledcWrite(PWM1_Ch, PWM1_DutyCycle--);
    delay (100);
  }
  
}
