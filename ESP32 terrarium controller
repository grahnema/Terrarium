#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <WiFi.h>
#include <WiFiUdp.h>
#include <NTPClient.h>
#include <TimeLib.h>
#include <LiquidCrystal_I2C.h>

#define LED_GPIO   5
#define PWM1_Ch    0
#define PWM1_Res   8
#define PWM1_Freq  5000

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, -14400, 3600);
Adafruit_BME280 bme;

int lcdColumns = 20;
int lcdRows = 4;
LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows);

int PWM1_DutyCycle = 0;
int RelayPin = 4;
int ledState = LOW;

unsigned long previousMillis = 0;
unsigned long time_now = 0;
long OnTime = 900000;
long OffTime = 5400000;
float temperature, humidity;

const char* ssid = "************";
const char* password = "************";

char Time[ ] = "TIME:00:00:00";
int last_second, second_, minute_, hour_;

int sunriseTime[2] = {11, 17};  // Time when sunrise starts (Hr, Min) 24h format
int sunsetTime[2] = {13, 15};  // Time when sunset starts (Hr, Min) 24h format

bool sunrise = false;
bool sunset = false;
unsigned long sunRiseSetTime = 3600000; // in milliseconds (Set to 1 hour) 3600000
unsigned long incrInterval = sunRiseSetTime / 256;  // Total time divided by resolution
unsigned long lastUpdate = 0;

void setup() {
lcd.init();
  lcd.backlight();

ledcSetup(PWM1_Ch, PWM1_Freq, PWM1_Res);
  ledcAttachPin(LED_GPIO, PWM1_Ch);

Serial.begin(115200);

  Serial.printf("Connecting to %s", ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
Serial.print(".");
  }
  Serial.println(" CONNECTED");
  pinMode(2, OUTPUT);
  pinMode(RelayPin, OUTPUT);

  timeClient.begin();

  bme.begin(0x76);
  Serial.println("BME Initialized");

  Serial.print("Sun rise/set Time: ");
  Serial.println(sunRiseSetTime);
  Serial.print("Increment Interval: ");
  Serial.println(incrInterval);
}

void loop() {
  humidity = bme.readHumidity();
  temperature = bme.readTemperature();

  if (humidity >= 90) {
    digitalWrite(2, HIGH);
    //Serial.println("Fan1 On");
    lcd.setCursor(0, 0);
    lcd.print ("Fan1 On");
  } else if (humidity <= 85) {
    digitalWrite(2, LOW);
    //Serial.println("Fan1 Off");
    lcd.setCursor(0, 0);
    lcd.print ("Fan1 Off");
  }

  unsigned long currentMillis = millis();

  if ((ledState == HIGH) && (currentMillis - previousMillis >= OnTime)) {
    ledState = LOW;
    previousMillis = currentMillis;
    digitalWrite(RelayPin, ledState);
    //Serial.println("Fan2 Off");
    lcd.setCursor(9, 0);
    lcd.print ("Fan2 Off");
  }
  else if ((ledState == LOW) && (currentMillis - previousMillis >= OffTime)) {
    ledState = HIGH;
    previousMillis = currentMillis;
    digitalWrite(RelayPin, ledState);
    //Serial.println("Fan2 On");
    lcd.clear();
    lcd.setCursor(9, 0);
    lcd.print ("Fan2 On");
  }

  timeClient.update();

  unsigned long unix_epoch = timeClient.getEpochTime();
  second_ = second(unix_epoch);

  if (second_ != last_second) {  // If 1 sec has passes
    minute_ = minute(unix_epoch);
    hour_   = hour(unix_epoch);
    Time[12] = second_ % 10 + 48;
    Time[11] = second_ / 10 + 48;
    Time[9]  = minute_ % 10 + 48;
    Time[8]  = minute_ / 10 + 48;
    Time[6]  = hour_   % 10 + 48;
    Time[5]  = hour_   / 10 + 48;
    //printDisplay();                // Print on display every 1 second
    Serial.println(Time);
    last_second = second_;
    checkSunTime();   // Check if its sunrise or sunset time
  }
 if (sunrise == true || sunset == true) {  // Chnage brightness only if its sunrise or sunset time
    ledFade();   // Fade up or fade down, depending on time of the day
  }
}

void printDisplay() {
  lcd.setCursor(0, 1);
  lcd.print("RH=");
  lcd.print(humidity);
  lcd.print("%  ");
  lcd.setCursor(10, 1);
  lcd.print("Tmp=");
  lcd.print(temperature);
  lcd.print("C  ");
  lcd.setCursor(0, 3);
  lcd.print(Time);
}

void checkSunTime() {
  if (sunriseTime[0] == hour_ && sunriseTime[1] == minute_ && sunrise == false) {
    sunrise = true;
    Serial.println("Sunrise time starts.");
  }
  else if (sunsetTime[0] == hour_ && sunsetTime[1] == minute_ && sunset == false) {
    sunset = true;
    Serial.println("Sunset time starts.");
  }
}

void ledFade() {
  if (millis() - lastUpdate >= incrInterval) {
    lastUpdate = millis();
    if (sunrise == true) {
      PWM1_DutyCycle++;
      ledcWrite(PWM1_Ch, PWM1_DutyCycle);
      // Uncomment to debug:
      Serial.print("PWM: ");
      Serial.println(PWM1_DutyCycle);
      if (PWM1_DutyCycle == 255) {
        sunrise = false;
      }
    }
    else if (sunset == true) {
      PWM1_DutyCycle--;
      ledcWrite(PWM1_Ch, PWM1_DutyCycle);
      // Uncomment to debug:
      Serial.print("PWM: ");
      Serial.println(PWM1_DutyCycle);
      if (PWM1_DutyCycle == 0) {
        sunset = false;
      }
    }
  }
}
